#!groovy

node {

	def BUILD_NUMBER=env.BUILD_NUMBER
    def RUN_ARTIFACT_DIR="tests/${BUILD_NUMBER}"
    def SFDC_USERNAME

	
    def CONNECTED_APP_CONSUMER_KEY='3MVG9WVXk15qiz1J7cu9IlavNr.AWS435dwUVopFudA.O5DGhZ7QoP49guqLmzqmgbA_JknOI4DFsPogdVRv9'
    def HUB_ORG='chandradev1@kloudrac.com'
    def JWT_KEY_CRED_ID='1fde5a5a-3987-4fbb-b1a6-a236ee570232'
    def DEPLOYDIR='src'
    def TEST_LEVEL='RunLocalTests'
    def SFDC_HOST = env.SFDC_HOST ?: "https://login.salesforce.com"
	println 'KEY IS' 
    println JWT_KEY_CRED_ID
    println HUB_ORG
    println SFDC_HOST
    println CONNECTED_APP_CONSUMER_KEY
	println env.PATH


    def GITHUB_TOKEN_CREDENTIALS_ID = 'GITHUB_TOKEN' // Set your GitHub token credentials ID here
    println env.PATH

    def toolbelt = tool 'toolbelt'
    withCredentials([string(credentialsId: GITHUB_TOKEN_CREDENTIALS_ID, variable: 'GITHUB_TOKEN')]) {
        stage('checkout source') {
            sh """
            git config --global credential.helper 'cache --timeout=3600'
            git config --global user.email "you@example.com"
            git config --global user.name "Your Name"
            git clone https://\$GITHUB_TOKEN@github.com/your-repo/your-project.git
            """
        }
    }

    withEnv(["HOME=${env.WORKSPACE}"]) {	
	
        withCredentials([file(credentialsId: SERVER_KEY_CREDENTIALS_ID, variable: 'server_key_file')]) {
            // -------------------------------------------------------------------------
            // Authenticate to Salesforce using the server key.
            // -------------------------------------------------------------------------

            stage('Authorize to Salesforce') {
                rc = command "${toolbelt}/sfdx auth:jwt:grant --instanceurl ${SF_INSTANCE_URL} --clientid ${SF_CONSUMER_KEY} --jwtkeyfile ${server_key_file} --username ${SF_USERNAME} --setalias UAT"
                if (rc != 0) {
                    error 'Salesforce org authorization failed.'
                }
            }

            // -------------------------------------------------------------------------
            // Deploy metadata and execute unit tests.
            // -------------------------------------------------------------------------

            stage('Deploy and Run Tests') {
                rc = command "${toolbelt}/sfdx force:mdapi:deploy --wait 10 --deploydir ${DEPLOYDIR} --targetusername UAT --testlevel ${TEST_LEVEL}"
                if (rc != 0) {
                    error 'Salesforce deploy and test run failed.'
                }
            }

            // -------------------------------------------------------------------------
            // Example shows how to run a check-only deploy.
            // -------------------------------------------------------------------------
            /*
            stage('Check Only Deploy') {
                rc = command "${toolbelt}/sfdx force:mdapi:deploy --checkonly --wait 10 --deploydir ${DEPLOYDIR} --targetusername UAT --testlevel ${TEST_LEVEL}"
                if (rc != 0) {
                    error 'Salesforce deploy failed.'
                }
            }
            */
        }
    }
}
